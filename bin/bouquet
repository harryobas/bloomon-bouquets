#!/usr/bin/env ruby

require "bundler/setup"
require "bloomon/bouquets"

def read_file(path)
  contents = File.read(path)
rescue Errno::ENOENT => e
  abort "#{path} not found".red
end

def prepare_data(contents)
  contents = contents.split
end

def get_bouquet_specs(contents)
  contents.select{|c| c.length > 2}.map do |c|
    Bloomon::Bouquets::BouquetSpecParser.parse_spec(c)
  end.reject{|c| c == nil}
end

def get_flowers(contents)
  contents = contents.select{|c| c.length == 2}
end

def generate_bouquets(specs, flowers)
  specs = specs.map do |s|
    Bloomon::Bouquets::BouquetSpecification.new(s[:name], s[:size], s[:flowers], s[:total])
  end
  bouquets = []
  specs.each do |s|
    bouquets << Bloomon::Bouquets::BouquetCreator.new(s, flowers).create_bouquet
  end
  bouquets.reject{|h| h == nil}
end

def main(file)
  data = read_file(file)
  data = prepare_data(data)

  bouquet_specs = get_bouquet_specs(data)
  flowers = get_flowers(data)

  bouquets = generate_bouquets bouquet_specs, flowers
  bouquets.each {|b| puts (b.to_s).green}
end

abort "bouquet [file_path]".red if ARGV[0].nil?

if __FILE__ == $PROGRAM_NAME
  main(ARGV[0])
end
